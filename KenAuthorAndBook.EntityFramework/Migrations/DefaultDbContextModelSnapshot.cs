// <auto-generated />
using System;
using KenAuthorAndBook.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KenAuthorAndBook.EntityFramework.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    partial class DefaultDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("KenAuthorAndBook.Models.Author", b =>
                {
                    b.Property<Guid>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Bio")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = new Guid("ac3146eb-5112-483a-85bc-4cda6f42c966"),
                            Bio = "English novelist known for her six major novels.",
                            Name = "Jane Austen"
                        },
                        new
                        {
                            AuthorId = new Guid("5ebf1726-aea3-4004-a5e2-b2d9a763ba43"),
                            Bio = "American writer, humorist, and lecturer.",
                            Name = "Mark Twain"
                        });
                });

            modelBuilder.Entity("KenAuthorAndBook.Models.Book", b =>
                {
                    b.Property<Guid>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = new Guid("39d656a7-a354-44b5-aa99-68c61204efca"),
                            AuthorId = new Guid("ac3146eb-5112-483a-85bc-4cda6f42c966"),
                            PublicationDate = new DateTime(1813, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Lambatin mo ang aking fart part one"
                        },
                        new
                        {
                            BookId = new Guid("c49236cd-3f94-4f14-9c46-96a0299150f8"),
                            AuthorId = new Guid("5ebf1726-aea3-4004-a5e2-b2d9a763ba43"),
                            PublicationDate = new DateTime(1884, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Keanu ang paglalakbay"
                        });
                });

            modelBuilder.Entity("KenAuthorAndBook.Models.Book", b =>
                {
                    b.HasOne("KenAuthorAndBook.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("KenAuthorAndBook.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
